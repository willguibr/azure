{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WebServerName": {
      "type": "string",
      "metadata": {
        "description": "This is the unique DNS name of the for the public IP for your VM"
      }
    },
    "mySqlPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for your mySQL account"
      }
    },
    "MetaportName": {
      "type": "string",
      "metadata": {
        "description": "This is the unique DNS name of the for the public IP for your VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "This is the username you wish to assign to your VMs admin account"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Virtual Machine Size"
      }
    },
      "vnetName": {
          "defaultValue": "myVnet",
          "type": "String",
          "metadata": {
          "description": "Name of the virtual network"
          }
        },
        "subnetName": {
            "defaultValue": "mySubnet",
            "type": "String",
            "metadata": {
                "description": "Name of the subnet for virtual network"
            }
        },
        "vnetAddressSpace": {
            "defaultValue": "192.168.0.0/16",
            "type": "String",
            "metadata": {
                "description": "Address space for virtual network"
            }
        },
        "vnetSubnetPrefix": {
            "defaultValue": "192.168.0.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet prefix for virtual network"
            }
        },
        "natGatewayName": {
            "defaultValue": "myNATgateway",
            "type": "String",
            "metadata": {
              "description": "Name of the NAT gateway"
            }
        },
        "networkInterfaceName": {
            "defaultValue": "myvmNIC",
            "type": "String",
            "metadata": {
              "description": "Name of the virtual machine nic"
            }
        },
        "publicIPName": {
            "defaultValue": "myPublicIP",
            "type": "String",
            "metadata": {
              "description": "Name of the NAT gateway public IP"
            }
        },
        "nsgName": {
            "defaultValue": "myVMnsg",
            "type": "String",
            "metadata": {
              "description": "Name of the virtual machine NSG"
            }
        },
        "publicIPVMname": {
            "defaultValue": "myPublicIPVM",
            "type": "String",
            "metadata": {
              "description": "Name of the virtual machine public IP"
            }
        },
        "publicIPPrefixName": {
            "defaultValue": "myPublicIPPrefix",
            "type": "String",
            "metadata": {
              "description": "Name of the NAT gateway public IP"
            }
        },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "metaTokenCode": {
      "type": "securestring",
      "metadata": {
        "description": "MetaPort Token Code"
      }
    }
  },
  "variables": {
    "nicName": "VMNic",
    "imagePublisher": "Canonical",
    "imageVersion": "latest",
    "imageSKU": "18.04-LTS",
    "imageOffer": "UbuntuServer",
    "storageAccountType": "Standard_LRS",
    "webservername": "[parameters('webservername')]",
    "MetaportName": "[parameters('MetaportName')]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [

    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Inbound-SSH-Traffic",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Inbound-ICMP-Traffic",
            "properties": {
              "priority": 1001,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "*",
              "protocol": "Icmp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-HTTPS-Traffic",
            "properties": {
              "priority": 2000,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-IKE-Traffic",
            "properties": {
              "priority": 2001,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "500",
              "protocol": "Udp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-NATT-Traffic",
            "properties": {
              "priority": 2002,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "4500",
              "protocol": "Udp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-ICMP-Traffic",
            "properties": {
              "priority": 2003,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "*",
              "protocol": "Icmp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('nsgname')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                      {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 301,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('publicipname')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('publicipvmname')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Network/publicIPPrefixes",
            "apiVersion": "2019-11-01",
            "name": "[parameters('publicipprefixname')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "prefixLength": 31,
                "publicIPAddressVersion": "IPv4"
            }
        },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('WebServerName')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('WebServerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('WebServerName'), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('MetaportName')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('MetaportName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('MetaportName'), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[parameters('vnetname')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('natgatewayname'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetaddressspace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetsubnetprefix')]",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways', parameters('natgatewayname'))]"
                            },
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "2019-11-01",
            "name": "[parameters('natgatewayname')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicipname'))]",
                "[resourceId('Microsoft.Network/publicIPPrefixes', parameters('publicipprefixname'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicipname'))]"
                    }
                ],
                "publicIpPrefixes": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPPrefixes', parameters('publicipprefixname'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('vnetname'), '/mySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]",
                "[resourceId('Microsoft.Network/natGateways', parameters('natgatewayname'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('vnetsubnetprefix')]",
                "natGateway": {
                    "id": "[resourceId('Microsoft.Network/natGateways', parameters('natgatewayname'))]"
                },
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), parameters('subnetname'))]"
              }
            }
          }
        ]
      }
    },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[parameters('networkinterfacename')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicipvmname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'mySubnet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "192.168.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicipvmname'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'mySubnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname'))]"
                }
            }
        },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('MetaportName'),'/newuserscript')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', variables('MetaportName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": ["https://raw.githubusercontent.com/willguibr/azure/main/Meta-InternalDBWebServer/scripts/install_metaport.sh"],
          "commandToExecute": "[concat('sh install_metaport.sh ', parameters('metaTokenCode'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('WebServerName'),'/newuserscript')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', variables('WebServerName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": ["https://raw.githubusercontent.com/willguibr/azure/main/Meta-InternalDBWebServer/scripts/install_wordpress.sh"],
          "commandToExecute": "[concat('sh install_wordpress.sh ', parameters('mySqlPassword'))]"
        }
      }
    }
  ]
}