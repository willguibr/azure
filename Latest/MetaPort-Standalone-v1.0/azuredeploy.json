{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "metaportName": {
      "type": "string",
      "metadata": {
        "description": "This is the unique DNS name of the for the public IP for your VM"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ], 
      "metadata": {
        "description": "Virtual Machine Size"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Specify whether to create a new or existing virtual network for the VM."
      }
    },
    "virtualNetworkName": {
      "type": "String",
      "defaultValue": "meta-Vnet",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "subnetName": {
      "type": "String",
      "defaultValue": "meta-Subnet",
      "metadata": {
        "description": "Name of the subnet for virtual network"
      }
    },
    "SSHInboundMgmt": {
      "type": "String",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "Source Allowed to manage the MetaPort"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "This is the username you wish to assign to your VMs admin account"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "metaTokenCode": {
      "type": "securestring",
      "metadata": {
        "description": "MetaPort Token Code"
      }
    }
  },
  "variables": {
    "nicName": "meta-VMNic",
    "addressPrefix": "10.0.0.0/16",
    "imagePublisher": "Canonical",
    "imageVersion": "latest",
    "imageSKU": "18.04-LTS",
    "imageOffer": "UbuntuServer",
    "vmName": "[parameters('metaportName')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetPrefix": "10.0.0.0/24",
    "SSHInboundMgmt": "[parameters('SSHInboundMgmt')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "publicIP",
    "publicIPAddressType": "Dynamic",
    "location": "[resourceGroup().location]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "networkSecurityGroupName": "meta-NSG"
  },
  "resources": [
    {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('metaportName')]"
        }
      }
    },
    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Inbound-SSH-Traffic",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "[variables('SSHInboundMgmt')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-HTTPS-Traffic",
            "properties": {
              "priority": 2000,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-IKE-Traffic",
            "properties": {
              "priority": 2001,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "500",
              "protocol": "Udp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "Outbound-NATT-Traffic",
            "properties": {
              "priority": 2002,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "4500",
              "protocol": "Udp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
       {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "2019-12-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/meta-onboard')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/willguibr/azure/main/Latest/MetaPort-Standalone-v1.0/install_metaport.sh"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('sudo cp install_metaport.sh /tmp && chown ubuntu:ubuntu /tmp/install_metaport.sh && chmod +x /tmp/install_metaport.sh && cd /tmp && sudo -u ubuntu -i sh /tmp/install_metaport.sh', ' ', parameters('metaTokenCode'))]"   
        }
      }
    }
  ]
}